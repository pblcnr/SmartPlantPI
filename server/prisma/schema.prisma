// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int     @id @default(autoincrement())
  nome      String
  email     String  @unique
  senha     String
  plantas   Planta[]
}

model Planta {
  id                Int       @id @default(autoincrement())
  nome              String
  usuarioId         Int
  usuario           Usuario   @relation(fields: [usuarioId], references: [id])
  sensorData        SensorData[]
  alerta            Alerta?
  historicoAlertas  HistoricoAlerta[]
}

model SensorData {
  id                Int         @id @default(autoincrement())
  plantaId          Int
  timestamp         DateTime    @default(now())
  temperatura       Float
  umidade           Float
  planta            Planta      @relation(fields: [plantaId], references: [id])
  historicoAlertas  HistoricoAlerta[]
}

model Alerta {
  id            Int       @id @default(autoincrement())
  plantaId      Int       @unique
  minUmidade    Float
  planta        Planta    @relation(fields: [plantaId], references: [id])
}

model HistoricoAlerta {
  id            Int         @id @default(autoincrement())
  plantaId      Int
  sensorDataId  Int
  mensagem      String
  timestamp     DateTime    @default(now())
  planta        Planta      @relation(fields: [plantaId], references: [id])
  sensorData    SensorData  @relation(fields: [sensorDataId], references: [id])
}